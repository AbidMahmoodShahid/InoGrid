<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctr="clr-namespace:inotechStyling.Copy.Styles">
    <!--  xmlns:ap="clr-namespace:inotech.Styling.AttachedProperties"  -->

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/inotechStyling.Copy;component/Colors/ControlColors.xaml" />
        <ResourceDictionary Source="/inotechStyling.Copy;component/Colors/ControlBrushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  Focus Visual  -->
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2"
                                   Stroke="{StaticResource ColorButtonStroke}"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Default button  -->
    <Style x:Key="ButtonBaseStyle" TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="{StaticResource BrushButtonBackground}" />
        <Setter Property="Foreground" Value="{StaticResource BrushButtonForeground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BrushButtonBorderbrush}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1" />

                        <Border x:Name="MouseOverOverlay"
                                Background="{StaticResource BrushButtonMouseOverBackground}"
                                BorderBrush="{StaticResource BrushButtonMouseOverBorderbrush}"
                                BorderThickness="1"
                                Opacity="0.0" />

                        <Border x:Name="PressedOverlay"
                                Background="{StaticResource BrushButtonClickedBackground}"
                                BorderBrush="{StaticResource BrushButtonClickedBorderbrush}"
                                BorderThickness="1"
                                Opacity="0.0" />

                        <Border x:Name="DisabledOverlay"
                                Background="{StaticResource BrushButtonDisabledBackground}"
                                BorderBrush="{StaticResource BrushButtonDisabledBorderbrush}"
                                BorderThickness="1"
                                Opacity="0.0" />

                        <Border BorderBrush="{StaticResource BrushControlTransparent}" BorderThickness="1">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True" />
                        </Border>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                    <VisualTransition GeneratedDuration="0" To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverOverlay" Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1.0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PressedOverlay" Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1.0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1.0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushButtonDisabledBackground}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BrushButtonDisabledBorderbrush}" />
                            <Setter Property="Foreground" Value="{StaticResource BrushButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyle"
           BasedOn="{StaticResource ButtonBaseStyle}"
           TargetType="Button">
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="Padding" Value="5,0,5,0" />
    </Style>

    <Style x:Key="SmartMeterButton"
           BasedOn="{StaticResource ButtonBaseStyle}"
           TargetType="Button">
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="MinWidth" Value="22" />
    </Style>


</ResourceDictionary>